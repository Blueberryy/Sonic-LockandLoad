#library "snclkld"
#include "zcommon.acs"
#define CSF_SOLIDGROUND 1
#define CSF_SOLIDACTORS 2
#define CSF_ALL (CSF_SOLIDGROUND|CSF_SOLIDACTORS)

//int StopBeingBrutal = 0;

script "Taunt" (void)
{
	NoiseAlert(0, 0);
	switch(PlayerClass(PlayerNumber()))
      {
            case 0:
                 PlaySound(1001, "sonicdoom/sonictaunt", CHAN_BODY, 1.0);
                 break;
            case 1:
                 PlaySound(1001, "sonicdoom/amytaunt", CHAN_BODY, 1.0);
                 break;
            case 2:
                 PlaySound(1001, "sonicdoom/classictaunt", CHAN_BODY, 1.0);
                 break;
            case 3:
                 PlaySound(1001, "sonicdoom/shadowtaunt", CHAN_BODY, 1.0);
                 break;
            case -1:
            default:
                 break;
        }
}

script "HammerJump" (void)
{
	int buttons = GetPlayerInput(-1, INPUT_BUTTONS);

	if (buttons & BT_CROUCH)
	{
		SetResultValue(1);
	}
	else
	{
		SetResultValue(0);
	}
}

script 3 (void) // I have no clue what this is supposed to do
{
    ThrustThingZ(0, 7, 0, 1);
}

script "TransformSuper" (void)
{
	if (CheckInventory("PowerSuper"))
	{
		switch(PlayerClass(PlayerNumber()))
		{
            case 0: // Sonic
                 if (GetCvar("SuperMusic") == 1)
				 {
					 SetMusic("v_supsnc", 0);
				 }
				 else if (GetCvar("SuperMusic") == 2)
				 {
					 SetMusic("m_supsnc", 0);
				 }
                 break;
            case 1: // Amy
                 if (GetCvar("SuperMusic") > 0)
				 {
					SetMusic("m_supamy", 0);
				 }
                 break;
            case 2: // Classic Sonic
                 if (GetCvar("SuperMusic") == 1)
				 {
					 SetMusic("v_supcls", 0);
				 }
				 else if (GetCvar("SuperMusic") == 2)
				 {
					 SetMusic("m_supcls", 0);
				 }
                 break;
            case 3: // Shadow
                 if (GetCvar("SuperMusic") == 1)
				 {
					 SetMusic("v_supsha", 0);
				 }
				 else if (GetCvar("SuperMusic") == 2)
				 {
					 SetMusic("m_supsha", 0);
				 }
                 break;
            case -1:
            default:
                 break;
        }
		while (CheckInventory("PowerSuper"))
		{
		    SetMugShotState("Super");
			Delay(35);
		}
		SetMusic("*", 0);
		SetMugShotState("Normal");
	}
	else
	{
		SetMusic("*", 0);
	}
}

script "TransformHyper" (void)
{
	if (CheckInventory("PowerHyper"))
	{
		while (CheckInventory("PowerHyper"))
		{
			if (GetCvar("SuperMusic") > 0)
			{
				SetMusic("m_hypcls", 0);
			}
		    SetMugShotState("Hyper");
			TakeInventory("PowerSuper", 1);
			TakeInventory("ChaosEmeralds", 1);
			Delay(35); 
		}
		SetMusic("*", 0);
		SetMugShotState("Normal");
	}
	else
	{
		SetMusic("*", 0);
	}
}

script "Invincibility" (void)
{
	if (!CheckInventory("PowerSuper") && !CheckInventory("PowerHyper"))
	{
		if (CheckInventory("PowerInvulnerable"))
		{
			if (GetCvar("InvincibilityMusic"))
			{
				switch(PlayerClass(PlayerNumber()))
				{
					case 0: 
						SetMusic("s_invinc", 0);
						break;
					case 1: 
						SetMusic("a_invinc", 0);
						break;
					case 2: 
						SetMusic("c_invinc", 0);
						break;
					case 3:
						SetMusic("d_invinc", 0);
						break;
					case -1:
					default:
						break;
				}
			}
			while (CheckInventory("PowerInvulnerable"))
			{
				delay(15);
			}
			SetMusic("*", 0);
		}
		else
		{
			SetMusic("*", 0);
		}
	}
}

script "InitMusic" ENTER
{
	SetMugShotState("Normal");
	SetMusic("*", 0);
}

script "ChaosEmeraldHandler" (void)
{
	if (CheckInventory("PowerSuper") || CheckInventory("PowerHyper"))
	{
		if (PlayerClass(PlayerNumber()) == 2 && !CheckInventory("PowerHyper") && GetCvar("HyperSonic"))
		/* If playing as Classic Sonic, you're not already in Hyper form and Hyper form is enabled... */
		{
            PlaySound(1001, "sonicdoom/classichyper", CHAN_BODY, 1.0);
			Log(s:"\c[SonicBlue]Okay, NO more playing around!!");
			TakeInventory("PowerSuper", 1);
			GiveInventory("HyperForm", 1);
			ACS_NamedExecute("TransformHyper", 0);
			ACS_NamedExecute("TakeRingsIfHyper", 0);
		}
		else
		{
			Log(s:"Chaos Energy refilled!");
			TakeInventory("ChaosEmeralds", 1);
			GiveInventory("ChaosEnergy", 999);
		}
	}
	else
	{
		switch(PlayerClass(PlayerNumber()))
		{
			case 1:
				Log(s:"\clPress \cf", k:"invuse", s:" \clto activate Dark form!");
				break;
			case -1:
				Log(s:"\clPress \cf", k:"invuse", s:" \clto activate Super form!");
				break;
			default:
				Log(s:"\clPress \cf", k:"invuse", s:" \clto activate Super form!");
				break;
		}
	}
}

script "NoBrutal4U" ENTER
{
	if (CheckClass("BrutalWeapon"))
	{
		if (GetLevelInfo(LEVELINFO_CLUSTERNUM) != 412 && GetLevelInfo(LEVELINFO_CLUSTERNUM) != 413)
		{
			if (GetCvar("StopBeingBrutal") == 1)
			{
				ChangeLevel("LMAONO", 0, CHANGELEVEL_NOINTERMISSION);
			}
			else
			{
				SetCvar("StopBeingBrutal", 1);
				ChangeLevel("ERR666", 0, CHANGELEVEL_NOINTERMISSION);
			}
		}
	}
	else
	{
		if (GetLevelInfo(LEVELINFO_CLUSTERNUM) == 412)
		{
			switch (Random(1, 6))
			{
				case 1:
					Print(s:"See you next game!");
					break;
				case 2:
					Print(s:"You aren't meant to be here");
					break;
				case 3:
					Print(s:"Sorry, this level is only for heretics");
					break;
				case 4:
					Print(s:"No! This isn't the way you're supposed to play the game!");
					break;
				case 5:
					Print(s:"lol no");
					break;
				case 6:
					Print(s:"Why would you even...?");
					break;
				default:
					Print(s:"Send chicken wings");
					break;
			}
			Exit_Normal(0);
		}
	}
}

script "DeathMusic" (void)
{
	switch(PlayerClass(PlayerNumber()))
	{
		case 0:
			break;
		case 1:
			break;
		case 2:
			SetMusic("noway", 0);
			break;
		case 3:
			SetMusic("allfail", 0);
			break;
		case -1:
		default:
			break;
	}
}

script "TakeRingsIfSuper" (void)
{
	while (CheckInventory("PowerSuper"))
	{
		Delay(2);
		TakeInventory("ChaosEnergy", 1);
		if (!CheckInventory("ChaosEnergy"))
		{
			TakeInventory("PowerSuper", 1);
			TakeInventory("PowerInvulnerable", 1);
		}
	}
}

script "TakeRingsIfHyper" (void)
{
	while (CheckInventory("PowerHyper"))
	{
		Delay(2);
		TakeInventory("ChaosEnergy", 2);
		if (!CheckInventory("ChaosEnergy"))
		{
			TakeInventory("PowerHyper", 1);
			TakeInventory("PowerInvulnerable", 1);
		}
	}
}

script "SetAirControl" ENTER
{
	switch(PlayerClass(PlayerNumber()))
	{
        case 2:
            SetAirControl(0.35);
            break;
        case -1:
        default:
			SetAirControl(0.5);
            break;
    }
}

script "KickCooldown" (void)
{
	while (CheckInventory("KickCooldown"))
	{
		TakeInventory("KickCooldown", 1);
		Delay(1);
	}
}

script "RingCountCheck" (void)
{
	if (CheckInventory("Health") > 500)
	{
		GiveInventory("OverRinged2", 1);
	}
	else if (CheckInventory("Health") > 300)
	{
		GiveInventory("OverRinged", 1);
	}
	else
	{
		TakeInventory("PowerOverRinged", 1);
		TakeInventory("PowerOverRinged2", 1);
	}
}

script "GiveTID" ENTER
{
	Thing_ChangeTID(0, 1001);
}

script "Damn4thChaosEmerald" (void)
{
	AmbientSound("sonicdoom/damn4thchaos", 127);
}

script "Drowning" (void)
{
	SetMusic("d_drown", 0);
}

script "NoMusic" (void)
{
	SetMusic("", 0);
}

script "ResetMusic" (void)
{
	SetMusic("*", 0);
}

script "ReticleSound" (void)
{
	AmbientSound("sonicdoom/reticle", 127);
}