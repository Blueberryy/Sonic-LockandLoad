#include "zcommon.acs"
#define CSF_SOLIDGROUND 1
#define CSF_SOLIDACTORS 2
#define CSF_ALL (CSF_SOLIDGROUND|CSF_SOLIDACTORS)

script 1 (void)
{
	switch(PlayerClass(PlayerNumber()))
      {
            case 0:
                 AmbientSound("sonicdoom/sonictaunt", 127);
                 break;
            case 1:
                 AmbientSound("sonicdoom/amytaunt", 127);
                 break;
            case 2:
                 AmbientSound("sonicdoom/classictaunt", 127);
                 break;
            case 3:
                 AmbientSound("sonicdoom/shadowtaunt", 127);
                 break;
            case -1:
            default:
                 break;
        }
}

script 2 (void)
{
	int buttons = GetPlayerInput(-1, INPUT_BUTTONS);

	if (buttons & BT_CROUCH)
	{
		ThrustThingZ(0, 70, 0, 1);
        AmbientSound("*jump", 127);
		SetResultValue(1);
	}
	else
	{
		SetResultValue(0);
	}
}

script 3 (void)
{
    ThrustThingZ(0, 7, 0, 1);
}

script 4 (void)
{
	if (CheckInventory("PowerSuper"))
	{
		switch(PlayerClass(PlayerNumber()))
		{
            case 0: // Sonic
                 SetMusic("m_supsnc", 0);
                 break;
            case 1: // Amy
                 SetMusic("m_supamy", 0);
                 break;
            case 2: // Classic Sonic
                 SetMusic("m_supcls", 0);
                 break;
            case 3: // Shadow
                 SetMusic("m_supsha", 0);
                 break;
            case -1:
            default:
                 break;
        }
		while (CheckInventory("PowerSuper"))
		{
		    SetMugShotState("Super");
			Delay(35);
		}
		SetMusic("*", 0);
		SetMugShotState("Normal");
	}
	else
	{
		SetMusic("*", 0);
	}
}

script 5 (void)
{
	if (CheckInventory("PowerSuper") != true)
	{
		if (CheckInventory("PowerInvulnerable"))
		{
			switch(PlayerClass(PlayerNumber()))
			{
				case 0: 
					SetMusic("s_invinc", 0);
					break;
				case 1: 
					SetMusic("a_invinc", 0);
					break;
				case 2: 
					SetMusic("c_invinc", 0);
					break;
				case 3:
					SetMusic("s_invinc", 0);
					break;
				case -1:
				default:
					break;
			}
			while (CheckInventory("PowerInvulnerable"))
			{
				delay(15);
			}
			SetMusic("*", 0);
		}
		else
		{
			SetMusic("*", 0);
		}
	}
}

script 6 ENTER
{
	SetMugShotState("Normal");
	SetMusic("*", 0);
}

script 7 (void)
{
	if (CheckInventory("PowerSuper"))
	{
		TakeInventory("ChaosEmeralds", 1);
		GiveInventory("ChaosEnergy", 100);
	}
	else
	{
		switch(PlayerClass(PlayerNumber()))
		{
			case 1:
				Log(s:"\clPress \cf", k:"invuse", s:" \clto activate Dark form!");
				break;
			case -1:
				Log(s:"\clPress \cf", k:"invuse", s:" \clto activate Super form!");
				break;
			default:
				Log(s:"\clPress \cf", k:"invuse", s:" \clto activate Super form!");
				break;
		}
	}
}

script 8 ENTER
{
	if (CheckClass("BrutalWeapon"))
	{
		if (GetLevelInfo(LEVELINFO_CLUSTERNUM) != 412)
		{
			ChangeLevel("ERR666", 0, CHANGELEVEL_NOINTERMISSION);
		}
	}
	else
	{
		if (GetLevelInfo(LEVELINFO_CLUSTERNUM) == 412)
		{
			switch (Random(1, 6))
			{
				case 1:
					Print(s:"See you next game!");
					break;
				case 2:
					Print(s:"You aren't meant to be here");
					break;
				case 3:
					Print(s:"Sorry, this level is only for heretics");
					break;
				case 4:
					Print(s:"No! This isn't the way you're supposed to play the game!");
					break;
				case 5:
					Print(s:"lol no");
					break;
				case 6:
					Print(s:"Why would you even...?");
					break;
				default:
					Print(s:"Send chicken wings");
					break;
			}
			Exit_Normal(0);
		}
	}
}

script 9 (void)
{
	switch(PlayerClass(PlayerNumber()))
	{
		case 0:
			break;
		case 1:
			break;
		case 2:
			SetMusic("noway", 0);
			break;
		case 3:
			SetMusic("allfail", 0);
			break;
		case -1:
		default:
			break;
	}
}

script 10 (void)
{
	while (CheckInventory("PowerSuper"))
	{
		Delay(2);
		TakeInventory("ChaosEnergy", 1);
		if (!CheckInventory("ChaosEnergy"))
		{
			TakeInventory("PowerSuper", 1);
			TakeInventory("PowerInvulnerable", 1);
		}
	}
}