/* Visit sll-base.acs for information */

script "SetFriction" ENTER
{
	int x, y, z, speed;
	while (true) {
		oldz = GetActorZ(0);
		Delay(1);
		x = GetActorVelX(0);
		y = GetActorVelY(0);
		speed = FixedSqrt(FixedMul(x, x) + FixedMul(y, y));
		int forward = GetPlayerInput(-1, MODINPUT_FORWARDMOVE);
		int sidem = GetPlayerInput(-1, MODINPUT_SIDEMOVE);
		int buttons = GetPlayerInput(-1, MODINPUT_BUTTONS);
		bool isMoving = forward > 0 || sidem > 0 || forward < 0 || sidem < 0;
		if (GetCvar("IsSpinDashing")) {
			SetActorProperty(0, APROP_Friction, 1.5);
		}
		else if (GetCvar("IsCrouching") && speed >= 1.0) {
			SetActorProperty(0, APROP_Friction, 1.088);
			if (speed < 100.0) {
				ScaleVelocity(0, 1.0 + (oldz - GetActorZ(0)) / 98);
			}
		}
		else if (GetCvar("ReservedMode")) {
			SetActorProperty(0, APROP_Friction, 1.0);
			SetAirControl(0.4);
		}
		else if (speed > 40.0 && !isMoving) {
			SetActorProperty(0, APROP_Friction, 1.0);
			SetAirControl(0.0);
		}
		else if (isMoving) {
			SetActorProperty(0, APROP_Friction, 1.0);
			SetAirControl(0.4);
		}
		else {
			SetActorProperty(0, APROP_Friction, 0.9);
			SetAirControl(0.0);
		}
	}
}

script "JumpHeight" ENTER
{
	while (1) {
		if (CheckInventory("PowerSuper") || CheckInventory("PowerHyper")) {
			SetActorProperty(1001, APROP_JumpZ, 17.0);
		}
		else if (!GetCvar("ReservedMode")) {
			SetActorProperty(1001, APROP_JumpZ, 15.0);
		}
		else {
			SetActorProperty(1001, APROP_JumpZ, 12.0);
		}
		Delay(1);
	}
}

script "WallJump" (int height, int distance, int angle)
{ // Not technically a "physics" thing but idk where else to put it
	Delay(1);
	PlaySound(0, "sonic/walljump", CHAN_BODY);
	int jangle;
	/* I don't care that this sucks.
	   If you have a better solution for
	   this send a PR or something. */
	switch (angle) {
		case 360: // forwards
		default:
			jangle = 256;
			break;
		case 90: // to the right
			jangle = 64;
			break;
		case 45: // to the forward-left
			jangle = 32;
			break;
		case 135: // to the forward-right
			jangle = 96;
			break;
		case 180: // behind
			jangle = 128;
			break;
		case 270: // to the left
			jangle = 192;
			break;
		case 225: // to the back-right
			jangle = 160;
			break;
		case 315: // to the back-left
			jangle = 224;
			break;
	}
	ThrustThing((GetActorAngle(0) >> 8) + jangle, distance * -1, 1, 0);
	ThrustThingZ(0, height, 0, 0);
}