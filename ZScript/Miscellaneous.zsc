class SonicSwitch : Actor // 4156
{
	Default
	{
		//$Name Sonic Switch
		//$Category Lock & Load Objects
		+SHOOTABLE
		+NOBLOOD
		+DONTFALL
		+NOGRAVITY
		+NOCLIP
		Health 1;
		Mass 100000;
		DamageFactor "Normal", 0;
		DamageFactor "SonicKick", 1;
		YScale 0.9;
	}
	States
	{
		Spawn:
			SONS A -1;
			Stop;
		Death:
			ACTS A -1;
			Stop;
	}
}

class AmySwitch : Actor
{
	Default
	{
		//$Name Amy Switch
		//$Category Lock & Load Objects
		+SHOOTABLE
		+NOBLOOD
		+DONTFALL
		+NOGRAVITY
		+NOCLIP
		Health 1;
		Mass 100000;
		DamageFactor "Normal", 0;
		DamageFactor "Piko", 1;
		YScale 0.9;
	}
	States
	{
		Spawn:
			AMYS A -1;
			Stop;
		Death:
			ACTS A -1;
			Stop;
	}
}

class ClassicSonicSwitch : Actor // 4156
{
	Default
	{
		//$Name Classic Sonic Switch
		//$Category Lock & Load Objects
		+SHOOTABLE
		+NOBLOOD
		+DONTFALL
		+NOGRAVITY
		+NOCLIP
		Health 1;
		Mass 100000;
		DamageFactor "Normal", 0;
		DamageFactor "SonicPunch", 1;
		YScale 0.9;
	}
	States
	{
		Spawn:
			CLSS A -1;
			Stop;
		Death:
			ACTS A -1;
			Stop;
	}
}

class ShadowSwitch : Actor
{
	Default
	{
		//$Name Shadow Switch
		//$Category Lock & Load Objects
		+SHOOTABLE
		+NOBLOOD
		+DONTFALL
		+NOGRAVITY
		+NOCLIP
		Health 1;
		Mass 100000;
		DamageFactor "Normal", 0;
		DamageFactor "Spear", 1;
		DamageFactor "ShadowMelee", 1;
		YScale 0.9;
	}
	States
	{
		Spawn:
			SHAS A -1;
			Stop;
		Death:
			ACTS A -1;
			Stop;
	}
}

class OmniSwitch : Actor
{
	Default
	{
		//$Name Omni Switch
		//$Category Lock & Load Objects
		+SHOOTABLE
		+NOBLOOD
		+DONTFALL
		+NOGRAVITY
		+NOCLIP
		Health 1;
		Mass 100000;
		DamageFactor "Normal", 0;
		DamageFactor "SonicKick", 1;
		DamageFactor "Piko", 1;
		DamageFactor "SonicPunch", 1;
		DamageFactor "Spear", 1;
		DamageFactor "ShadowMelee", 1;
		YScale 0.9;
	}
	States
	{
		Spawn:
			ALLS A -1;
			Stop;
		Death:
			ACTS A -1;
			Stop;
	}
}


class Continuer : Actor // 31935
{
	Default
	{
		//$Category Lock & Load Objects
	}
	States
	{
		Spawn:
			TNT1 A 0 NoDelay ACS_NamedExecute("ContinuingSucks");
			Stop;
	}
}

class StabilityCheck : Actor
{
	void FatalExceptionVMAbort()
	{
		A_Log("\c[gold]Hey, I'll play with you some other time!");
		ThrowAbortException("unstable game state");
	}
	States
	{
		Spawn:
			TNT1 A 0 NoDelay FatalExceptionVMAbort();
			Stop;
	}
}

class TutorialText : Actor
{
	Default
	{
		//$Category Lock & Load Text
		+NOGRAVITY
	}
	States
	{
		Spawn:
			DTXT A -1;
			Stop;
	}
}

class SideLevelsText : Actor
{
	Default
	{
		//$Category Lock & Load Text
		+NOGRAVITY
	}
	States
	{
		Spawn:
			DTXT B -1;
			Stop;
	}
}

class RoadClosed : Actor
{
	Default
	{
		//$Category Lock & Load Objects
		+NOGRAVITY
	}
	States
	{
		Spawn:
			RCLS A -1;
			Stop;
	}
}

class Doox : Actor
{
	Default
	{
		//$Category Lock & Load Objects
	}
	States
	{
		Spawn:
			DOOX A -1;
			Stop;
	}
}