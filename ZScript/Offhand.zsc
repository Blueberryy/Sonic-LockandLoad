class SonicKick : CustomInventory
{
	int inuse;
	int EXKick;
	States
	{
	Use:
		TNT1 A 0 A_Overlay(-2, "TimeCheck");
		TNT1 A 0 A_OverlayOffset(-2, 0, 32);
		Fail;
	TimeCheck:
		TNT1 A 0 A_JumpIf(GetCvar("DkgBruTecFpgA"), "Errrod");
		TNT1 A 0 A_JumpIf(CountInv("KickCooldown")<1, "FloorCheck");
		Stop;
	FloorCheck:
		TNT1 A 0
		{
			invoker.EXKick = 0;
		}
	    TNT1 A 0 A_CheckFloor("KickAttack");
		TNT1 A 0
		{
			invoker.EXKick = 1;
		}
	KickAttack:
		TNT1 A 0 A_JumpIfInventory("PowerSuper", 1, "SuperKickAttack");
		TNT1 A 0 A_GiveInventory("KickCooldown", 25);
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 A_PlaySound("sonic/grunt", 8);
		TNT1 A 0 A_JumpIf(invoker.EXKick > 0, "SonicEagle");
		KICK A 1 A_PlaySound("sweapons/swordswing", 7);
		KICK BC 1;
		KICK D 1 A_CustomPunch(random(1,16)*24, true, CPF_NOTURN, "SonicKickPuff", 75, 0, 0, "ArmorBonus", "sweapons/finalhit");
		KICK EF 1;
		TNT1 A 1 A_SetInventory("KickCooldown", 5);
		Stop;
	SonicEagle:
		EAGL A 1 A_PlaySound("sweapons/swordswing", 7);
		EAGL BC 1;
		EAGL D 1 A_CustomPunch(random(1,16)*48, true, CPF_NOTURN, "SonicKickPuff", 75, 0, 0, "ArmorBonus", "sweapons/finalhit");
		EAGL E 1;
		TNT1 A 1 A_SetInventory("KickCooldown", 5);
		Stop;
	SuperKickAttack:
		TNT1 A 0 A_GiveInventory("KickCooldown", 25);
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 A_PlaySound("sonic/grunt", 8);
		TNT1 A 0 A_JumpIf(invoker.EXKick > 0, "SuperSonicEagle");
		SKIK A 1 
		{
			A_PlaySound("sweapons/shockwave", 7);
			A_FireBullets(27, 9, 100, 20, "GibPuff", 0);
		}
		SKIK BC 1;
		SKIK D 1 A_CustomPunch(random(1,16)*48, true, CPF_NOTURN, "SonicKickPuff", 75, 0, 0, "ArmorBonus", "sweapons/finalhit");
		SKIK EF 1;
		TNT1 A 1 A_SetInventory("KickCooldown", 5);
		Stop;
	SuperSonicEagle:
		SEAG A 1 
		{
			A_PlaySound("sweapons/shockwave", 7);
			A_FireBullets(9, 27, 100, 40, "GibPuff", 0);
		}
		SEAG BC 1;
		SEAG D 1 A_CustomPunch(random(1,16)*96, true, CPF_NOTURN, "SonicKickPuff", 75, 0, 0, "ArmorBonus", "sweapons/finalhit");
		SEAG E 1;
		TNT1 A 1 A_SetInventory("KickCooldown", 5);
		Stop;
	Errrod:
		TNT1 A 0 A_Print("Error");
		Stop;
	}
	override void DoEffect()
	{
		Super.DoEffect();
		if (inuse > 0)
		{
			inuse--;
		}
		if (owner is "PlayerPawn" && owner.GetPlayerInput(MODINPUT_BUTTONS)&BT_RELOAD && inuse == 0)
		{
			owner.UseInventory(self);
			inuse = 5;
		}
	}
}

class AmyKick : CustomInventory
{
	int inuse;
	States
	{
	Use:
		TNT1 A 0 A_Overlay(-2, "TimeCheck");
		TNT1 A 0 A_OverlayOffset(-2, 0, 32);
		Fail;
	TimeCheck:
		TNT1 A 0 A_JumpIf(CountInv("KickCooldown")<1, "KickAttack");
		Stop;
	KickAttack:
		TNT1 A 0 A_GiveInventory("KickCooldown", 25);
		AKIK A 1 A_PlaySound("sweapons/swordswing", 7);
		TNT1 A 0 A_GiveInventory("LegOut", 1);
		AKIK BC 1;
		AKIK D 1 A_CustomPunch(10, false, CPF_NOTURN, "AmyKickPuff", 75, 0, 0, "ArmorBonus", "sweapons/finalhit");
		AKIK EFG 1;
		TNT1 A 0 A_TakeInventory("LegOut", 1);
		TNT1 A 1 A_SetInventory("KickCooldown", 10);
		Stop;
	}
	override void DoEffect()
	{
		Super.DoEffect();
		if (inuse > 0)
		{
			inuse--;
		}
		if (owner is "PlayerPawn" && owner.GetPlayerInput(MODINPUT_BUTTONS)&BT_RELOAD && inuse == 0)
		{
			owner.UseInventory(self);
			inuse = 6;
		}
	}
}

class SonicDash : CustomInventory
{
	int inuse;
	States
	{
	Use:
		TNT1 A 0 A_Overlay(-2, "TimeCheck");
		TNT1 A 0 A_OverlayOffset(-2, 0, 32);
		Fail;
	TimeCheck:
		TNT1 A 0 A_JumpIf(CountInv("PowerSuper")||CountInv("PowerHyper"), "BoostCheck");
		TNT1 A 0 A_JumpIf(CountInv("KickCooldown")<1, "DashAtk");
		Stop;
	BoostCheck:
		TNT1 A 0 A_JumpIf(CountInv("KickCooldown")<1, "Boost");
		Stop;
	Boost:
		TNT1 A 0 A_GiveInventory("KickCooldown", 25);
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 A_StartSound("classic/go", 8);
		TNT1 A 0 A_StartSound("sweapons/boost");
		TNT1 A 0 A_JumpIf(CountInv("PowerHyper"), "HyperBoost");
		BOOS B 15
		{
			A_FireBullets(25, 25, 100, 200, "SonicDashPuff", FBF_NOPITCH);
			A_TakeInventory("ChaosEnergy", 25);
			A_ChangeVelocity(Cos(Pitch) * 128, 0, Sin(Pitch) * -128, CVF_Relative);
			A_Light(10);
		}
		TNT1 A 0 A_Light(0);
		Stop;
	HyperBoost:
		BOOS C 15
		{
			A_FireBullets(50, 50, 200, 200, "SonicDashPuff", FBF_NOPITCH);
			A_ChangeVelocity(Cos(Pitch) * 200, 0, Sin(Pitch) * -200, CVF_Relative);
			A_Light(10);
		}
		TNT1 A 0 A_Light(0);
		Stop;
	DashAtk:
		TNT1 A 0 A_GiveInventory("KickCooldown", 25);
		TNT1 A 0 A_AlertMonsters();
		TNT1 A 0 A_PlaySound("classic/dash", 2);
		TNT1 A 0 A_PlaySound("classic/homing", 3, 0.75);
		TNT1 A 0
		{
			bool debug = false;
			int dashspeed;
			int invdspeed;
			
			if (A_CheckFloor("DashAtk")) { dashspeed = 42; } else { dashspeed = 32; }
			invdspeed = dashspeed * -1;
			
			if (GetCvar("DashAiming")) {
				int buttons = GetPlayerInput(MODINPUT_BUTTONS);
				int input = 0;
				
				if (debug) {
					A_LogInt(dashspeed);
					A_LogInt(invdspeed);
				}
				
				if (buttons & BT_FORWARD) {
					if (debug) { A_Log("Forward"); }
					A_ChangeVelocity(Cos(Pitch) * dashspeed, 0, Sin(Pitch) * invdspeed, CVF_Relative);
					input = 1;
				}
				
				if (buttons & BT_MOVELEFT) {
					if (debug) { A_Log("Left"); }
					A_ChangeVelocity(0, Cos(Pitch) * dashspeed, 0, CVF_Relative);
					input = 1;
				}
				
				if (buttons & BT_MOVERIGHT) {
					if (debug) { A_Log("Right"); }
					A_ChangeVelocity(0, Cos(Pitch) * invdspeed, 0, CVF_Relative);
					input = 1;
				}
				
				if (buttons & BT_BACK) {
					if (debug) { A_Log("Back"); }
					A_ChangeVelocity(Cos(Pitch) * invdspeed, 0, Sin(Pitch) * dashspeed, CVF_Relative);
					input = 1;
				}
				
				if (!input) {
					if (debug) { A_Log("No keys"); }
					A_ChangeVelocity(Cos(Pitch) * dashspeed, 0, Sin(Pitch) * invdspeed, CVF_Relative);
				}
				
			}
			else {
				A_ChangeVelocity(Cos(Pitch) * dashspeed, 0, Sin(Pitch) * invdspeed, CVF_Relative);
			}
		}
		TNT1 A 5
		{
			if (CountInv("PowerSuper") < 1 && CountInv("PowerHyper") < 1)
			{
				A_CustomPunch(40, CPF_PULLIN | CPF_NOTURN, 0, "SonicDashPuff", 100, 0, 0, "ArmorBonus", "sweapons/finalhit");
			}
			else if (CountInv("PowerSuper"))
			{
				A_CustomPunch(160, CPF_PULLIN | CPF_NOTURN, 0, "SonicDashPuff", 100, 0, 0, "ArmorBonus", "sweapons/finalhit");
			}
			else if (CountInv("PowerHyper"))
			{
				A_CustomPunch(320, CPF_PULLIN | CPF_NOTURN, 0, "SonicDashPuff", 100, 0, 0, "ArmorBonus", "sweapons/finalhit");
			}
		}
		TNT1 A 1 A_SetInventory("KickCooldown", 10);
		Stop;
	}
	override void DoEffect()
	{
		Super.DoEffect();
		if (inuse > 0)
		{
			inuse--;
		}
		if (owner is "PlayerPawn" && owner.GetPlayerInput(MODINPUT_BUTTONS)&BT_RELOAD && inuse == 0)
		{
			owner.UseInventory(self);
			inuse = 4;
		}
	}
}