class SonicPlayer : PlayerPawn 
{
	Default
	{
		Speed 2;
		Health 125;
		Radius 15;
		Height 46;
		PainChance 250;
		Mass 100;
		Player.MaxHealth 999;
		Player.DisplayName "Sonic";
		Player.Face "SNF";
		Player.JumpZ 12.0;
		Player.SoundClass "sonic";
		Player.StartItem "SonicAbilities";
		Player.StartItem "SonicCheck";
		Player.StartItem "AcceleratedPistol";
		Player.StartItem "ChaosEnergy", 100;
		Player.WeaponSlot 1, "SonicAbilities", "Caliburn";
		Player.WeaponSlot 2, "AcceleratedPistol";
		Player.WeaponSlot 3, "RapidShotty";
		Player.WeaponSlot 4, "ShurikenCrossbow";
		Player.WeaponSlot 5, "EclipseBlaster";
		Player.WeaponSlot 6, "AirStrikeLauncher";
	}
	States
	{
		Spawn:
			PLAY A -1;
			Loop;
		See:
			TNT1 A 0
			{
				if (CountInv("PowerSuper") > 0)
				{
					A_SetSpeed(4);
				}
				else if (GetCvar("DkgBruTecFpgA"))
				{
					A_SetSpeed(0.25);
				}
				else
				{
					A_SetSpeed(2);
				}
			}
			PLAY ABCD 4;
			Loop;
		Missile:
			PLAY E 12;
			Goto Spawn;
		Melee:
			PLAY F 6 BRIGHT;
			Goto Missile;
		Pain:
			PLAY G 4;
			PLAY G 0 A_PlaySound("sglobal/loserings", 2);
			PLAY G 4 A_PlaySound("sonic/pain", 1);
			Goto Spawn;
		Death.Drownd:
			TNT1 A 0 A_PlaySound("sglobal/drown");
			Goto Death+2;
		Death:
			TNT1 A 0 ACS_NamedExecute("DeathMusic", 0, 0);
			TNT1 A 0 { if (GetCvar("DkgBruTecFpgA")) { A_SpawnItem("StabilityCheck"); } }
			TNT1 A 0
			{
				if (random(1, 4) == 4)
				{
					A_PlaySound("sonic/thatwaslame");
					A_Log("\c[Sonic]Well. That was lame.");
				}
				else
				{
					A_PlaySound("sonic/scream");
				}
			}
			PLAY H 10;
			PLAY I 10;
			PLAY J 10 A_NoBlocking;
			PLAY KLM 10;
			PLAY N -1;
			Stop;
		XDeath:
			TNT1 A 0 { if (GetCvar("DkgBruTecFpgA")) { A_SpawnItem("StabilityCheck"); } }
			TNT1 A 0 ACS_NamedExecute("DeathMusic", 0, 0);
			TNT1 A 0 A_PlaySound("sonic/ohno");
			TNT1 A 0 A_Log("OH NO");
			PLAY O 5;
			PLAY P 5;
			PLAY Q 5 A_NoBlocking;
			PLAY RSTUV 5;
			PLAY W -1;
			Stop;
	}
}

class AmyPlayer : PlayerPawn 
{
	Default
	{
		Speed 1.2;
		Health 100;
		DamageFactor 1.3;
		Radius 15;
		Height 50;
		PainChance 256;
		Mass 100;
		Player.MaxHealth 999;
		Player.DisplayName "Amy";
		Player.Face "AMF";
		Player.JumpZ 12.0;
		Player.SoundClass "amy";
		Player.StartItem "AmyCheck";
		Player.StartItem "PikoPikoHammer";
		Player.StartItem "SilentRosePistol";
		Player.StartItem "ChaosEnergy", 50;
		Player.WeaponSlot 1, "PikoPikoHammer";
		Player.WeaponSlot 2, "SilentRosePistol";
		Player.WeaponSlot 3, "PrecisionShotgun";
		Player.WeaponSlot 4, "AmyEclipseBlaster";
		Player.WeaponSlot 5, "RapidMissiles";
	}
	States
	{
		Spawn:
			PLAY A -1;
			Loop;
		See:
			TNT1 A 0
			{
				if (CountInv("PowerSuper") > 0)
				{
					A_SetSpeed(2);
				}
				else if (GetCvar("DkgBruTecFpgA"))
				{
					A_SetSpeed(0.2);
				}
				else
				{
					A_SetSpeed(1.2);
				}
			}
			PLAY ABCD 4 ;
			Loop;
		Missile:
			PLAY E 12;
			Goto Spawn;
		Melee:
			PLAY F 6 BRIGHT;
			Goto Missile;
		Pain:
			PLAY G 4;
			PLAY G 4
			{
				if (CountInv("PowerBlocking") > 0)
				{
					A_PlaySound("sweapons/blockattackx", 7);
				}
				else
				{
					A_PlaySound("sglobal/loserings", 6);
					A_PlaySound("amy/pain", 7);
				}
			}
			Goto Spawn;
		Death.Drownd:
			TNT1 A 0 A_PlaySound("sglobal/drown");
			Goto Death+2;
		Death:
			TNT1 A 0 { if (GetCvar("DkgBruTecFpgA")) { A_SpawnItem("StabilityCheck"); } }
			TNT1 A 0 A_PlaySound("amy/scream");
			TNT1 A 0 ACS_NamedExecute("DeathMusic", 0, 0);
			PLAY H 10;
			PLAY I 10;
			PLAY J 10 A_NoBlocking;
			PLAY KLM 10;
			PLAY N -1;
			Stop;
		XDeath:
			TNT1 A 0 { if (GetCvar("DkgBruTecFpgA")) { A_SpawnItem("StabilityCheck"); } }
			TNT1 A 0 A_Log("OH NO");
			TNT1 A 0 A_PlaySound("amy/ohno");
			TNT1 A 0 ACS_NamedExecute("DeathMusic", 0, 0);
			PLAY O 5;
			PLAY P 5;
			PLAY Q 5 A_NoBlocking;
			PLAY RSTUV 5;
			PLAY W -1;
			Stop;
	}
}
class ShadowPlayer : PlayerPawn 
{
	Default
	{
		Speed 2;
		Health 145;
		Radius 15;
		Height 46;
		PainChance 225;
		Mass 100;
		Player.MaxHealth 999;
		Player.DisplayName "Shadow";
		Player.Face "SHF";
		Player.JumpZ 15.0;
		Player.SoundClass "shadow";
		Player.StartItem "ShadowAbilities";
		Player.StartItem "ShadowCheck";
		Player.StartItem "ChaosEnergy", 120;
		Player.WeaponSlot 1, "ShadowAbilities", "HighShovel", "ShadowKnife";
		Player.WeaponSlot 2, "DarkAssault";
		Player.WeaponSlot 3, "QuadShotty";
		Player.WeaponSlot 4, "ChaosEmerald";
		Player.WeaponSlot 5, "DualRockets";
	}
	States
	{
		Spawn:
			PLAY A -1;
			Loop;
		See:
			PLAY ABCD 4;
			Loop;
		Missile:
			PLAY E 12;
			Goto Spawn;
		Melee:
			PLAY F 6 BRIGHT;
			Goto Missile;
		Pain:
			PLAY G 4;
			PLAY G 4 A_PlaySound("shadow/pain");
			Goto Spawn;
		Death.Drownd:
			TNT1 A 0 A_PlaySound("sglobal/drown");
			Goto Death+2;
		Death:
			TNT1 A 0 { if (GetCvar("DkgBruTecFpgA")) { A_SpawnItem("StabilityCheck"); } }
			TNT1 A 0 A_PlaySound("shadow/scream");
			TNT1 A 0 ACS_NamedExecute("DeathMusic", 0, 0); 
			PLAY H 10;
			PLAY I 10;
			PLAY J 10 A_NoBlocking;
			PLAY KLM 10;
			PLAY N -1;
			Stop;
		XDeath:
			TNT1 A 0 { if (GetCvar("DkgBruTecFpgA")) { A_SpawnItem("StabilityCheck"); } }
			TNT1 A 0 A_PlaySound("shadow/scream");
			TNT1 A 0 A_Log("ALL FAIL SHADOW");
			PLAY O 5;
			PLAY P 5 ACS_NamedExecute("DeathMusic", 0, 1);
			PLAY Q 5 A_NoBlocking;
			PLAY RSTUV 5;
			PLAY W -1;
			Stop;
	}
}

class ClassicSonicPlayer : PlayerPawn
{
	Default
	{
		Speed 2;
		Health 125;
		Radius 10;
		Height 46;
		PainChance 255;
		Mass 100;
		DamageFactor "RocketStream", 0.2;
		Player.MaxHealth 999;
		Player.DisplayName "C.Sonic";
		Player.SoundClass "classic";
		Player.JumpZ 12.0;
		Player.Face "CLF";
		Player.StartItem "ClassicAbilities";
		Player.StartItem "ChaosBlaster";
		Player.StartItem "ChaosEnergy", 150;
		Player.StartItem "ClassicCheck";
		Player.WeaponSlot 1, "ClassicAbilities";
		Player.WeaponSlot 2, "ChaosBlaster";
		Player.WeaponSlot 3, "SpeedyShotgun";
		Player.WeaponSlot 4, "ChaosRain";
		Player.WeaponSlot 5, "ClassicRocketStream";
	}
	States
	{
		Spawn:
			PLAY A -1;
			Loop;
		See:
			TNT1 A 0
			{
				if (CountInv("PowerHyper") > 0)
				{
					A_SetSpeed(6);
				}
				else if (CountInv("PowerSuper") > 0)
				{
					A_SetSpeed(4);
				}
				else if (GetCvar("DkgBruTecFpgA"))
				{
					A_SetSpeed(0.25);
				}
				else
				{
					A_SetSpeed(2);
				}
			}
			PLAY ABCD 4 ;
			Loop;
		Missile:
			PLAY E 12;
			Goto Spawn;
		Melee:
			PLAY F 6 BRIGHT;
			Goto Missile;
		Pain:
			TNT1 A 0 A_PlaySound("sglobal/loserings", 6);
			TNT1 A 0 { if (random(1, 4) == 4) { A_PlaySound("classic/pain", 7); } }
			PLAY G 4;
			PLAY G 4;
			Goto Spawn;
		Death.Drownd:
			TNT1 A 0 A_PlaySound("sglobal/drown");
			Goto Death+2;
		Death:
			TNT1 A 0 { if (GetCvar("DkgBruTecFpgA")) { A_SpawnItem("StabilityCheck"); } }
			TNT1 A 0 ACS_NamedExecute("DeathMusic", 0, 0);
			TNT1 A 0
			{
				if (random(1,4) == 4)
				{
					A_Log("\c[Classic]You don't have enough memory in the memory card.");
					A_PlaySound("classic/memorycard");
				}
				else 
				{
					A_PlaySound("classic/death");
				}
			}
			PLAY H 10;
			PLAY I 10;
			PLAY J 10 A_NoBlocking;
			PLAY KLM 10;
			PLAY N -1;
			Stop;
		XDeath:
			TNT1 A 0 { if (GetCvar("DkgBruTecFpgA")) { A_SpawnItem("StabilityCheck"); } }
			TNT1 A 0 A_JumpIf(!GetCvar("DeathMusic"), "OhNo");
			TNT1 A 0 A_PlaySound("classic/ohno");
			TNT1 A 0 A_Log("NO WAY? NO WAY!");
			TNT1 A 0 { if (GetCvar("DeathMusic")) { ACS_NamedExecute("DeathMusic", 0, 1); } }
			PLAY O 5;
			PLAY P 5;
			PLAY Q 5 A_NoBlocking;
			PLAY RSTUV 5;
			PLAY W -1;
			Stop;
		OhNo:
			TNT1 A 0 A_Log("OH NO");
			TNT1 A 0 A_PlaySound("classic/ohno");
			PLAY H 10;
			PLAY I 10;
			PLAY J 10 A_NoBlocking;
			PLAY KLM 10;
			PLAY N -1;
			Stop;
	}
}

class SonicCheck : Inventory 
{
	Default
	{
		Inventory.MaxAmount 1;
	}
}
class AmyCheck : Inventory 
{
	Default
	{
		Inventory.MaxAmount 1;
	}
}
class ShadowCheck : Inventory 
{
	Default
	{
		Inventory.MaxAmount 1;
	}
}
class ClassicCheck : Inventory 
{
	Default
	{
		Inventory.MaxAmount 1;
	}
}